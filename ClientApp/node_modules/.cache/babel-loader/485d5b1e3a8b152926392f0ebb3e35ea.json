{"ast":null,"code":"import _classCallCheck from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/keyhan/projects/js/InstaAiBot/ClientApp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/keyhan/projects/js/InstaAiBot/ClientApp/src/layouts/AuthPage.js\";\nimport React, { Component } from 'react';\nimport LoginButton from \"./controls/Buttons\";\nimport Container from \"@material-ui/core/Container\";\nimport { Box } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonIcon from '@material-ui/icons/Person';\nimport clsx from \"clsx\";\nimport { Grade, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { blue, lightBlue, green, red, yellow, purple, grey } from \"@material-ui/core/colors\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport { AnimatedRotation, AnimatedPosition } from 'react-declare-animate';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Animate from \"react-smooth\";\nimport GraphicsHandler from './handlers/GraphicsHandler';\nimport Redirect from \"react-router-dom/Redirect\";\nimport Center from 'react-center';\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextBox from \"./controls/TextBox\";\nimport posed from 'react-pose';\nvar LoginBox = posed.div({\n  visible: {\n    opacity: 1\n  },\n  hidden: {\n    opacity: 0\n  }\n});\nvar classes = {};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n});\nvar inClasses = {\n  rootInput: {\n    background: 'transparent'\n  }\n};\n\nfunction StylePreparer(props) {\n  classes = useStyles();\n  return React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  });\n}\n\nvar AuthPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthPage, _Component);\n\n  function AuthPage(props) {\n    var _this;\n\n    _classCallCheck(this, AuthPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthPage).call(this, props));\n    _this.mobileWidth = 700;\n    _this.state = {\n      loading: 0,\n      signupForCardAngles: false,\n      signupForFormItems: false,\n      forecasts: [],\n      resizeTrigger: false,\n      showPassword: false,\n      goHome: false\n    };\n    document.body.style.overflowX = 'hidden';\n    document.body.style.overflowY = 'hidden';\n    GraphicsHandler.instance = new GraphicsHandler();\n    _this.scrollTopTargetRef = React.createRef();\n    _this.loadingViewRef = React.createRef();\n    _this.updateWindowDimensions = _this.updateWindowDimensions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleScrollReset = _this.handleScrollReset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.forceScrollReset = _this.forceScrollReset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    setTimeout(function () {\n      _this.setState({\n        loading: 1\n      }); //     setTimeout(() => {\n      //         this.setState({loading: 2});\n      //         setTimeout(() => {\n      //             this.setState({loading: 3});\n      //             if (GraphicsHandler.instance.isLongMobileScreen()) {\n      //                 document.body.style.overflowY = 'hidden';\n      //                 this.forceScrollReset();\n      //             } else\n      //                 document.body.style.overflowY = 'auto';\n      //         }, 1250);\n      //     }, 3000);\n\n    }, 1500);\n    return _this;\n  }\n\n  _createClass(AuthPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"updateWindowDimensions\",\n    value: function updateWindowDimensions() {\n      GraphicsHandler.instance.width = window.innerWidth / GraphicsHandler.instance.density;\n      GraphicsHandler.instance.height = window.innerHeight / GraphicsHandler.instance.density; //this.setState({resizeTrigger: !this.state.resizeTrigger});\n    }\n  }, {\n    key: \"measureAuthCardHeight\",\n    value: function measureAuthCardHeight() {\n      if (this.state.loading >= 3) {\n        if (GraphicsHandler.instance.isLongMobileScreen()) {\n          document.body.style.overflowY = 'hidden';\n          this.forceScrollReset();\n        } else document.body.style.overflowY = 'auto';\n      }\n\n      return GraphicsHandler.instance.isMobileScreen() ? this.state.signupForFormItems ? '17cm' : '10cm' : this.state.signupForFormItems ? GraphicsHandler.instance.dpToPx(400) : GraphicsHandler.instance.dpToPx(350);\n    }\n  }, {\n    key: \"measureAuthCardWidth\",\n    value: function measureAuthCardWidth() {\n      return GraphicsHandler.instance.isMobileScreen() ? GraphicsHandler.instance.isWideMobileScreen() ? GraphicsHandler.instance.dpToPx(GraphicsHandler.instance.width) / 2 : GraphicsHandler.instance.dpToPx(GraphicsHandler.instance.width) * 4 / 5 : GraphicsHandler.instance.dpToPx(700);\n    }\n  }, {\n    key: \"handleScrollReset\",\n    value: function handleScrollReset() {\n      if (this.state.loading === 1) {\n        window.scrollTo(0, 0);\n      }\n    }\n  }, {\n    key: \"forceScrollReset\",\n    value: function forceScrollReset() {\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Redirect, {\n        to: \"/Admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AuthPage;\n}(Component);\n\nAuthPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(inClasses)(AuthPage);","map":{"version":3,"sources":["/home/keyhan/projects/js/InstaAiBot/ClientApp/src/layouts/AuthPage.js"],"names":["React","Component","LoginButton","Container","Box","Card","TextField","makeStyles","IconButton","PersonIcon","clsx","Grade","Visibility","VisibilityOff","blue","lightBlue","green","red","yellow","purple","grey","VpnKeyIcon","Checkbox","FormControlLabel","Link","AnimatedRotation","AnimatedPosition","PhoneIcon","TextFormatIcon","EmailIcon","Animate","GraphicsHandler","Redirect","Center","PropTypes","withStyles","TextBox","posed","LoginBox","div","visible","opacity","hidden","classes","useStyles","theme","root","display","flexWrap","margin","spacing","textField","flexBasis","inClasses","rootInput","background","StylePreparer","props","AuthPage","mobileWidth","state","loading","signupForCardAngles","signupForFormItems","forecasts","resizeTrigger","showPassword","goHome","document","body","style","overflowX","overflowY","instance","scrollTopTargetRef","createRef","loadingViewRef","updateWindowDimensions","bind","handleScrollReset","forceScrollReset","setTimeout","setState","window","addEventListener","removeEventListener","width","innerWidth","density","height","innerHeight","isLongMobileScreen","isMobileScreen","dpToPx","isWideMobileScreen","scrollTo","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport LoginButton from \"./controls/Buttons\";\nimport Container from \"@material-ui/core/Container\";\nimport {Box} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonIcon from '@material-ui/icons/Person';\nimport clsx from \"clsx\";\nimport {Grade, Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport {blue, lightBlue, green, red, yellow, purple, grey} from \"@material-ui/core/colors\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Link from \"@material-ui/core/Link\";\nimport {AnimatedRotation, AnimatedPosition} from 'react-declare-animate';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Animate from \"react-smooth\";\nimport GraphicsHandler from './handlers/GraphicsHandler';\nimport Redirect from \"react-router-dom/Redirect\";\nimport Center from 'react-center';\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextBox from \"./controls/TextBox\";\nimport posed from 'react-pose';\n\nconst LoginBox = posed.div({\n    visible: { opacity: 1 },\n    hidden: { opacity: 0 }\n});\n\nlet classes = {};\n\nlet useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    textField: {\n        flexBasis: 200,\n    }\n}));\n\nconst inClasses = {\n    rootInput: {\n        background: 'transparent'\n    },\n};\n\nfunction StylePreparer(props) {\n\n    classes = useStyles();\n\n    return (<Box/>);\n}\n\nclass AuthPage extends Component {\n\n    mobileWidth = 700;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: 0,\n            signupForCardAngles: false,\n            signupForFormItems: false,\n            forecasts: [],\n            resizeTrigger: false,\n            showPassword: false,\n            goHome: false\n        };\n        document.body.style.overflowX = 'hidden';\n        document.body.style.overflowY = 'hidden';\n        GraphicsHandler.instance = new GraphicsHandler();\n        this.scrollTopTargetRef = React.createRef();\n        this.loadingViewRef = React.createRef();\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.handleScrollReset = this.handleScrollReset.bind(this);\n        this.forceScrollReset = this.forceScrollReset.bind(this);\n        setTimeout(() => {\n             this.setState({loading: 1});\n        //     setTimeout(() => {\n        //         this.setState({loading: 2});\n        //         setTimeout(() => {\n        //             this.setState({loading: 3});\n        //             if (GraphicsHandler.instance.isLongMobileScreen()) {\n        //                 document.body.style.overflowY = 'hidden';\n        //                 this.forceScrollReset();\n        //             } else\n        //                 document.body.style.overflowY = 'auto';\n        //         }, 1250);\n        //     }, 3000);\n         }, 1500);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        GraphicsHandler.instance.width = window.innerWidth / GraphicsHandler.instance.density;\n        GraphicsHandler.instance.height = window.innerHeight / GraphicsHandler.instance.density;\n        //this.setState({resizeTrigger: !this.state.resizeTrigger});\n    }\n\n    measureAuthCardHeight() {\n        if (this.state.loading >= 3) {\n            if (GraphicsHandler.instance.isLongMobileScreen()) {\n                document.body.style.overflowY = 'hidden';\n                this.forceScrollReset();\n            } else\n                document.body.style.overflowY = 'auto';\n        }\n        return GraphicsHandler.instance.isMobileScreen() ?\n            this.state.signupForFormItems ?\n                '17cm' :\n                '10cm' :\n            this.state.signupForFormItems ?\n                GraphicsHandler.instance.dpToPx(400) :\n                GraphicsHandler.instance.dpToPx(350);\n    }\n\n    measureAuthCardWidth() {\n        return GraphicsHandler.instance.isMobileScreen() ?\n            GraphicsHandler.instance.isWideMobileScreen() ?\n                GraphicsHandler.instance.dpToPx(GraphicsHandler.instance.width) / 2 :\n                GraphicsHandler.instance.dpToPx(GraphicsHandler.instance.width) * 4 / 5 :\n            GraphicsHandler.instance.dpToPx(700);\n    }\n\n    handleScrollReset() {\n        if (this.state.loading === 1) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    forceScrollReset() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n\n        return <Redirect to='/Admin'/>\n\n    }\n}\n\nAuthPage.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(inClasses)(AuthPage);\n\n"]},"metadata":{},"sourceType":"module"}